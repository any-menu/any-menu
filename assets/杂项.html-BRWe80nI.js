import{_ as l,c as e,b as t,o as n}from"./app-ByTpAasv.js";const o={};function r(a,i){return n(),e("div",null,[...i[0]||(i[0]=[t('<h1 id="一些杂项" tabindex="-1">一些杂项</h1><h2 id="未完全成熟的一些功能" tabindex="-1">未完全成熟的一些功能</h2><p>(这个部分是我开发之前写好的产品设计，不一定都做出来了。后续我有空更新文档时，会再去写哪些还在TODO中)</p><ul><li>AI/GPT (以插件形式提供)</li><li>性能 <ul><li>可以使用高超的缓存技术进行优化，即使是大量文本也不会全部加载到内存中 (可设置内存大小?)<br> 类似于使用 redis 优化 mysql 的做法</li><li>多层检索方式并用：前缀树 匹配前缀、哈希 匹配完整、倒序 匹配模糊</li></ul></li></ul><h3 id="带-editor-时额外支持的功能-待开发" tabindex="-1">带 Editor 时额外支持的功能 (待开发)</h3><p>带Editor的情况: 限制: 需要能获取到所属环境的编辑器对象 (通过插件/hack)，否则不支持该项功能</p><p>如 Obsidian、VSCode、浏览器扩展，均可使用插件获取到内部的编辑器对象，从而做到输入法或软件所无法做到的事情</p><ul><li>支持: 类似 obsidian 的各种命令。推荐集成: 蚕子的增强编辑，Editing Toolbar 的功能、VSCode的强大菜单</li><li>可以将 Obsidian 命令放到菜单里 (类似 Editor Toolbar 的自定义工具栏)</li></ul><h3 id="mini-editor-功能-待开发" tabindex="-1">Mini Editor 功能 (待开发)</h3><p>会自带一个简易的Mini Editor</p><ul><li>使用逻辑: 选中一段文本 -&gt; 使用2号全局快捷键 -&gt; 呼出Mini Editor且上面有选中的文本 -&gt; 编辑过后会自动替换</li><li>用于在一些简易的Editor临时使用更强大的功能。如在 notepad、notepad-- 等软件上使用多光标</li><li>用于局部文本的编辑: 如将选中文本的某一文本替换成另一文本，这样不会影响全局</li><li>临时备忘录、闪念笔记等</li></ul><h3 id="一些-obsidian-插件的部分功能" tabindex="-1">一些 Obsidian 插件的部分功能</h3><p>如果你在用以下的一些 Obsidian 插件，说不定该插件功能也适合你 (部分功能重叠)</p><p>特别是如果你 <strong>同时使用多个编辑器去编辑你的文档时</strong>，你希望在多个编辑器都能获得相同的体验</p><ul><li>工具栏 <ul><li>Editor Toolbar</li></ul></li><li>斜杠召唤插入菜单 <ul><li><a href="https://github.com/alephpiece/obsidian-slash-commander" target="_blank" rel="noopener noreferrer">Slash Commander</a> ⭐89</li><li>Slash snippets</li></ul></li><li>插入内容 <ul><li>Emoji Toolbar</li></ul></li><li>自动补全 <ul><li>LaTex Suit: 虽然初印象他是用来自动补全公式的，但其实他也能自动补全其他东西。<br> 你可以在设置面板去自定义 snippets</li><li>Linter: 虽然初印象他是用来格式化文档的，但他设置面板中，也能支持一个功能:<br> &quot;自定义命令&quot;/&quot;自定义正则表达式替换&quot;</li><li>Template: 可以快速创建文件并写入模板</li><li>QuickAdd: 支持Template/Capture/Macros，其中 Template 就是可以创建模板</li></ul></li><li>非Obsidian <ul><li>Windows自带的 <code>Win+.</code> 他那个所支持的内容太少了，也不能自定义</li></ul></li></ul><h3 id="雾凇拼音功能" tabindex="-1">雾凇拼音功能</h3><ul><li>雾凇拼音功能 <a href="https://github.com/iDvel/rime-ice" target="_blank" rel="noopener noreferrer">https://github.com/iDvel/rime-ice</a><br> 相较于雾凇而言：不用记 (搜索框)、更适合低频的输入内容、适合使用所有输入法的人群。但如果你笔记熟练使用雾凇，通常还是使用输入法更快 <ul><li>拆字反查（uU+拼音），<strong>拆字辅码</strong>（拼音+`+拆字辅码）</li><li>自整理的 Emoji</li><li>以词定字（左右中括号：[、]）</li><li>Unicode（U+Unicode 码位）</li><li>数字、人民币大写（R+数字）</li><li>日期、时间、星期（详见方案 /date_translator 节点）</li><li>农历（转写：N+八位数字；获取当前农历：全拼nl，双拼lunar）</li><li>简易计算器（cC+算式）</li><li>特殊符号、字符输入（全拼v+首字母缩写；双拼V+首字母缩写）</li><li>拼音纠错（模糊音）</li></ul></li></ul><h2 id="faq" tabindex="-1">FAQ</h2><h3 id="_8mb的插件体积似乎有点大-我使用的不是全拼拼音" tabindex="-1">8MB的插件体积似乎有点大 &amp;&amp; 我使用的不是全拼拼音</h3><p>251013版本中，其中有 8MB 都源于 pinyin 库，这个库用于支持拼音搜索，包含了庞大的字典文件</p><p>如果你不需要拼音搜索这一功能，可以将相关逻辑删除后重新编译，即可简化体积。否则这部分大小是不可避免的</p><p>(后续可能会单独编译一个不支持拼音搜索的mini版本，在该版本中，你仍可以往自定义词典中添加拼音索引来支持拼音搜索)</p><p>如果你使用的不是全拼，你可以修改这部分的逻辑，转换为自己的输入法方案。如各种双拼或形码</p><h2 id="项目-灵感来源" tabindex="-1">项目/灵感来源</h2><ul><li>灵感来源 <ul><li>以前在用 AutoHotKey、Kanata、RIME/搜狗 自定义词典 时，就想做一个独立于输入法之前外的输入法增强辅助软件。因为当时我还在切换使用不同的输入法并分别去自定义他们，我并不希望我花了大精力在某个输入法软件上后，后期因为要换输入法而重新配置</li><li>用各种笔记软件和IDE时你会发现他们一些相同功能的快捷键并不相同，想要较为统一的体验则需要设置成统一的快捷键时。当时就想做一个独立于编辑器之外的编辑器辅助软件，或 MiniEditor 全局或临时局部来提供统一的快捷键和编辑体验。</li><li>在使用并做 Ob 的工具栏和菜单时，就想过这个功能应该可以把他提升为一个独立的模块，甚至是可用于各种编辑器软件上。而不是各个编辑器使用一个不同的快捷键和菜单 (obsidian/typora/思源/vscode等)。而这也是该项目名字的由来: You can use the same <strong>menu</strong> on <strong>any</strong> different editing / input method software. (你可以在任何不同的编辑器/输入法软件上使用同一个菜单)</li><li>最后，在2025年9月，我于 AnyBlock 的 Obsidian Pro 版本的研发过程中。在开发了 AnyBlock 的编辑器菜单后，我又一次在想……这应当是一个独立功能。(这也是部分项目命名的原因)</li></ul></li><li>于是乎，在历史的想法的积累，以及最近项目的导火索的作用下，我开发了这个软件 —— 一个专注于输入法/编辑器辅助增强体验的独立工具</li></ul><h2 id="鸣谢" tabindex="-1">鸣谢</h2><p>(灵感/词典/代码参考，帮助)</p><ul><li><a href="https://github.com/iDvel/rime-ice" target="_blank" rel="noopener noreferrer">rime-ice</a> 借用了其 opencc/ 下的 emoji 和 others 字典</li><li><a href="https://github.com/jtroo/kanata" target="_blank" rel="noopener noreferrer">kanata</a> 意义在于让我决定用rust作为后端语言开发此项目</li><li><a href="https://github.com/Obsidian-Forge/obsidian-i18n/" target="_blank" rel="noopener noreferrer">obsidian-i18n</a> 提供了低成本 (使用gitee服务器而非自建服务器) 的云词库设计</li><li><a href="https://github.com/any-block/any-block/" target="_blank" rel="noopener noreferrer">any-block pro</a> 我早期写的多级菜单雏形代码</li></ul>',28)])])}const p=l(o,[["render",r]]),s=JSON.parse('{"path":"/zh/%E6%9D%82%E9%A1%B9.html","title":"一些杂项","lang":"zh-CN","frontmatter":{"description":"一些杂项 未完全成熟的一些功能 (这个部分是我开发之前写好的产品设计，不一定都做出来了。后续我有空更新文档时，会再去写哪些还在TODO中) AI/GPT (以插件形式提供) 性能 可以使用高超的缓存技术进行优化，即使是大量文本也不会全部加载到内存中 (可设置内存大小?) 类似于使用 redis 优化 mysql 的做法 多层检索方式并用：前缀树 匹配前...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一些杂项\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://any-menu.github.io/any-menu/zh/%E6%9D%82%E9%A1%B9.html"}],["meta",{"property":"og:site_name","content":"any-menu"}],["meta",{"property":"og:title","content":"一些杂项"}],["meta",{"property":"og:description","content":"一些杂项 未完全成熟的一些功能 (这个部分是我开发之前写好的产品设计，不一定都做出来了。后续我有空更新文档时，会再去写哪些还在TODO中) AI/GPT (以插件形式提供) 性能 可以使用高超的缓存技术进行优化，即使是大量文本也不会全部加载到内存中 (可设置内存大小?) 类似于使用 redis 优化 mysql 的做法 多层检索方式并用：前缀树 匹配前..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":5.46,"words":1639},"filePathRelative":"zh/杂项.md","excerpt":"\\n<h2>未完全成熟的一些功能</h2>\\n<p>(这个部分是我开发之前写好的产品设计，不一定都做出来了。后续我有空更新文档时，会再去写哪些还在TODO中)</p>\\n<ul>\\n<li>AI/GPT (以插件形式提供)</li>\\n<li>性能\\n<ul>\\n<li>可以使用高超的缓存技术进行优化，即使是大量文本也不会全部加载到内存中 (可设置内存大小?)<br>\\n类似于使用 redis 优化 mysql 的做法</li>\\n<li>多层检索方式并用：前缀树 匹配前缀、哈希 匹配完整、倒序 匹配模糊</li>\\n</ul>\\n</li>\\n</ul>\\n<h3>带 Editor 时额外支持的功能 (待开发)</h3>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"zh/杂项.md","value":{"title":"杂项","path":"zh/杂项.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,s as data};
