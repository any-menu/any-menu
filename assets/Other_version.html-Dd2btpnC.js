import{_ as t,c as e,b as i,o as a}from"./app-DWhgHWSb.js";const o={};function p(s,n){return a(),e("div",null,[...n[0]||(n[0]=[i('<h1 id="比较-anycaps-的软件方案" tabindex="-1">比较 AnyCaps 的软件方案</h1><h2 id="anycaps-方案-anycaps-是什么" tabindex="-1">AnyCaps 方案，AnyCaps 是什么?</h2><p><strong>你需要区分 &quot;设计方案&quot; 与 &quot;软件方案&quot;</strong></p><p>AnyCaps 是 LincZero 大佬设计一套使用 Caps 等其他按键的类 vim 方案<br> (与 vim 方案区别很大，更易用)</p><p>而这套方案只定义了当你按下哪些键后，会发生什么行为。而并不负责程序。你可以自由选择多种不同的程序去使用这套方案</p><p>如 LincZero 开发的 AnyMenu、或传统的 AutoHotKey、或 Kanata 这种专门的热键软件</p><p>所以这里就存在两个概念: &quot;<strong>热键的软件方案</strong>&quot; 和 &quot;<strong>热键的设计方案</strong>&quot;</p><p>(<em>AnyMenu 仅 App 版支持，插件版本难以捕获和阻止原按键行为</em>)</p><h2 id="linczero-的使用历程" tabindex="-1">LincZero 的使用历程</h2><p>因为 AnyCaps 是我一开始设计出来的，我一开始使用的是 AutoHotKey 方案，后来转到了 Kanata，再后来自己开发 AnyMenu 软件</p><p>而在我不断地切换软件的过程中，虽然过程中也有对方案的优化，但这套方案的基本层和基本用法是没有改变的</p><h2 id="比较" tabindex="-1">比较</h2><ul><li>平台 <ul><li>AnyMenu: Windows, 其余平台待支持，支持作为插件版本</li><li>Kanata: 多平台</li><li>AutoHotKey: Windows</li></ul></li><li>功能 - 集成其他工具 <ul><li>AnyMenu: 集成了很多输入法/编辑器/光标操控等所需要的工具</li><li>其他: 也能集成部分其他功能，但对于非热键的功能支持度不优</li></ul></li><li>功能 - 对于选中文本的处理 <ul><li>AnyMenu: 能精准快速识别所选择的文本，及文本所在的编辑器上下文</li><li>其他: 对于所选择文本的处理只能使用剪切版，比较慢、Kanata版本的还需要使用cmd特性才能。如果想要判断当前是否有选中文本，也较为困难，需要往剪切板插入flag。存在延时高和易错等问题</li></ul></li><li>功能 - 脚本 <ul><li>AnyMEnu: 支持高自定义的功能性脚本</li><li>其他: 主要支持按键脚本，对于功能性脚本的支持有限</li></ul></li></ul>',13)])])}const l=t(o,[["render",p]]),u=JSON.parse('{"path":"/zh/quick_keys/Other_version.html","title":"比较 AnyCaps 的软件方案","lang":"zh-CN","frontmatter":{"description":"比较 AnyCaps 的软件方案 AnyCaps 方案，AnyCaps 是什么? 你需要区分 \\"设计方案\\" 与 \\"软件方案\\" AnyCaps 是 LincZero 大佬设计一套使用 Caps 等其他按键的类 vim 方案 (与 vim 方案区别很大，更易用) 而这套方案只定义了当你按下哪些键后，会发生什么行为。而并不负责程序。你可以自由选择多种不同的程...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"比较 AnyCaps 的软件方案\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://any-menu.github.io/any-menu/zh/quick_keys/Other_version.html"}],["meta",{"property":"og:site_name","content":"any-menu"}],["meta",{"property":"og:title","content":"比较 AnyCaps 的软件方案"}],["meta",{"property":"og:description","content":"比较 AnyCaps 的软件方案 AnyCaps 方案，AnyCaps 是什么? 你需要区分 \\"设计方案\\" 与 \\"软件方案\\" AnyCaps 是 LincZero 大佬设计一套使用 Caps 等其他按键的类 vim 方案 (与 vim 方案区别很大，更易用) 而这套方案只定义了当你按下哪些键后，会发生什么行为。而并不负责程序。你可以自由选择多种不同的程..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":1.72,"words":515},"filePathRelative":"zh/quick_keys/Other_version.md","excerpt":"\\n<h2>AnyCaps 方案，AnyCaps 是什么?</h2>\\n<p><strong>你需要区分 \\"设计方案\\" 与 \\"软件方案\\"</strong></p>\\n<p>AnyCaps 是 LincZero 大佬设计一套使用 Caps 等其他按键的类 vim 方案<br>\\n(与 vim 方案区别很大，更易用)</p>\\n<p>而这套方案只定义了当你按下哪些键后，会发生什么行为。而并不负责程序。你可以自由选择多种不同的程序去使用这套方案</p>\\n<p>如 LincZero 开发的 AnyMenu、或传统的 AutoHotKey、或 Kanata 这种专门的热键软件</p>\\n<p>所以这里就存在两个概念: \\"<strong>热键的软件方案</strong>\\" 和 \\"<strong>热键的设计方案</strong>\\"</p>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"zh/","link":"zh/quick_keys/README.html"}],"localMap":{"nodes":[{"id":"zh/quick_keys/Other_version.md","value":{"title":"Other_version","path":"zh/quick_keys/Other_version.md","outlink":[],"backlink":["zh/quick_keys/README.md"]}},{"id":"zh/quick_keys/README.md","value":{"title":"zh/","path":"zh/quick_keys/README.md","outlink":[],"backlink":[]}}],"links":[{"source":"zh/quick_keys/README.md","target":"zh/quick_keys/Other_version.md"}]}}}');export{l as comp,u as data};
